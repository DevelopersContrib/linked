<?phpclass DomainFollower extends CI_Model {	private $table = "DomainFollowers";	private $pk = "f_id";	private $date = null;    private $db_read = null;    private $db_aff = null;    private $db_lead = null;     private $db_vnoc_read = null;        function __construct() {      parent::__construct();      $this->db_read = $this->load->database('read2', TRUE);      $this->db_aff = $this->load->database('affiliate', TRUE);      $this->db_lead = $this->load->database('offer', TRUE);      $this->db_vnoc_read = $this->load->database('readvnoc', TRUE);         }    	public function checkexist($field,$value,$field2=null,$value2=null){     $returnValue = false;     if ($field2 && $value2){     	$query = $this->db_read->query("SELECT count(*) as count FROM `$this->table` WHERE `$field` = '".$value."' AND  `$field2` = '".$value2."'");     }else {      $query = $this->db_read->query("SELECT count(*) as count FROM `$this->table` WHERE `$field` = '".$value."' ");     }        if ($query->num_rows() > 0){        foreach ($query->result() as $row)         {           $count =  $row->count;         }     }     if ($count > 0){        $returnValue = true;        }    return $returnValue;	}			public function getinfo($field1,$field2,$value, $field3=null, $value3=null){	      $v = "";	      if ($field3 && $value3){	      	$query = $this->db_read->query("SELECT $field1 as val FROM `$this->table` WHERE `$field2` = '".$value."' AND  `$field3` = '".$value3."'");	      }else {	        $query = $this->db_read->query("SELECT $field1 as val FROM `$this->table` WHERE `$field2` = '".$value."' ");	      }	      if ($query->num_rows() > 0){	        foreach ($query->result() as $row)	         {	           $v =  $row->val;	         }	     }	     	    return $v;	  }	    public function getinfobyid($field,$id){     $returnValue = "";      $query = $this->db_read->query("SELECT `$field` as val from $this->table where $this->pk=$id");      if ($query->num_rows() > 0){        foreach ($query->result() as $row)         {           $returnValue =  $row->val;         }       }      return $returnValue;    }	  function getbyattribute($key=null,$value=null,$key2=null, $value2=null){  	if (($key2) && ($value2)){  		 return  $this->db_read->query("SELECT * FROM $this->table where `$key` = '".$value."' AND `$key2` = '".$value2."' ORDER BY RAND()");  	}else if ($key && $value){  	  return  $this->db_read->query("SELECT * FROM $this->table where `$key` = '".$value."' ORDER BY RAND()");  	}else {  		return  $this->db_read->query("SELECT * FROM $this->table order by f_id");  	}  }       function getcountbyattribute($key,$value,$key2=null,$value2=null){  	if ($key2 && $value2){  		  $query = $this->db_read->query("Select count(*) as total from $this->table where `$key` = '".$value."' AND `$key2` = '".$value2."'");  	}  else {   	   $query = $this->db_read->query("Select count(*) as total from $this->table where `$key` = '".$value."' ");  	}     if ($query->num_rows() > 0){        foreach ($query->result() as $row)         {           $total =  $row->total;         }      }      return $total;  }    function update($id,$data){     $query = $this->db->query("Select * from `$this->table` where $this->pk = '$id'"); 	 if ($query->num_rows() > 0){	     $this->db->where($this->pk, $id);		 $this->db->update($this->table, $data);		 return $id;	 } else {	 	if ($this->date){	 	  $this->db->set($this->date, 'NOW()', FALSE);	 	}	 	$this->db->insert($this->table, $data);	 	return $this->db->insert_id();	 }   }    function delete($id){  	return $this->db->delete($this->table, array($this->pk => $id));   }    function getfollowed($id,$limit=null,$start=null,$order=null){	$cond = '';	$ordercond = '';	if($limit==null) $cond='LIMIT 0,5';	else if($limit=='all') $cond='';	else if($limit!='all') $cond='LIMIT 0,'.$limit;	else if($limit != null && $start != null) $cond='LIMIT '.$start.','.$limit;	if ($order != null){	   $ordercond = " Order By $order ";		}	return $this->db_read->query("Select * from `$this->table` where member_id = '$id' ".$ordercond." ".$cond);  }    function getfollowedmore($id,$limit=null,$start=null,$order=null){	$sql = "Select * from `$this->table` where member_id = '$id' ";		if ($order != null){		$sql .= " Order by $order ";	}		if (($limit != null)){		$sql .= 'LIMIT '.$start.','.$limit;	}  		return $this->db_read->query($sql);  }    function getfollowedallperid($id){	return $this->db_read->query("Select * from `$this->table` where member_id = '$id' ");  }    function getfollowedlimited($id,$limit){	return $this->db_read->query("Select * from `$this->table` where member_id = '$id' ORDER BY RAND() LIMIT 0,$limit ");  }    function getfollowedall(){  	return $this->db_read->query("Select * from `$this->table` ");  }    function getTopFollowedSites()  {  	return $this->db_read->query("Select domain, count(*) as followed FROM `$this->table` GROUP BY domain ORDER BY followed desc LIMIT 0,5 ");  }    function getTopFollowedSitesKeyword($keywords='',$limit='')  {  	if(!empty($keywords)){		$limit = !empty($limit)? "LIMIT $limit":"";		$sql = "Select domain, count(*) as followed FROM `DomainFollowers` 		Inner join Domains on Domains.DomainName = DomainFollowers.domain		WHERE Domains.Keywords LIKE '%$keywords%'		GROUP BY domain ORDER BY followed desc $limit ";		return $this->db_read->query($sql);	}else{		$limit = !empty($limit)? "LIMIT $limit":"LIMIT 10";		return $this->db_read->query("Select domain, count(*) as followed FROM `$this->table` GROUP BY domain ORDER BY followed desc $limit ");	}  }    function getTopFollowedSitesDomain($keywords='',$limit='')  {  	if (!empty($keywords))   	{  		$limit = !empty($limit)? "LIMIT $limit":"";  		$sql = "SELECT domain,Domains.`Logo`, COUNT(*) AS followed FROM `DomainFollowers` 		INNER JOIN Domains ON Domains.DomainName = DomainFollowers.domain		WHERE Domains.`DomainName` LIKE '%$keywords%'		GROUP BY domain ORDER BY followed desc $limit ";		return $this->db_read->query($sql);  	}else{  		$limit = !empty($limit)? "LIMIT $limit":"LIMIT 9";  		return $this->db_read->query("SELECT domain,Domains.`Logo`, COUNT(*) AS followed FROM `DomainFollowers` 		INNER JOIN Domains ON Domains.DomainName = DomainFollowers.domain		WHERE Domains.`DomainName` LIKE '%$keywords%'		GROUP BY domain ORDER BY followed desc $limit ");  	}  }     function getTopFollowedSitesLimit($limit)  {  	return $this->db_read->query("Select domain, count(*) as followed FROM `$this->table` GROUP BY domain ORDER BY followed desc LIMIT 0,$limit ");  }    function getfollowersCount($domain){  	$query =  $this->db_read->query("Select * from `$this->table` where domain = '$domain' LIMIT 0,5");	return $query->num_rows();  }    function getonefollowed($userid){  	if ($this->checkexist('member_id',$userid)===true){  	  $query =  $this->db_read->query("Select domain from `$this->table` where member_id = '$userid' order by f_id LIMIT 1");  	}else {  	  $query =  $this->db_read->query("Select domain from `$this->table` ORDER BY RAND() LIMIT 1");	  	}  	if ($query->num_rows() > 0){        foreach ($query->result() as $row)         {           $domain =  $row->domain;         }      }      return $domain;  }    function getfollowersicons($domain,$limit){	/* return $this->db->query("SELECT   MemberProfile.`profile_image` FROM  MemberProfile,  DomainFollowers WHERE MemberProfile.`member_id` = DomainFollowers.`member_id`   AND DomainFollowers.`domain` = '".$domain."' LIMIT 0,".$limit);  */		return $this->db_read->query("SELECT 		  MemberProfile.`profile_image`,		  Members.`Username`,		  Members.`FirstName`,		  Members.`LastName` 		FROM		  MemberProfile,		  DomainFollowers,		  Members 		WHERE MemberProfile.`member_id` = DomainFollowers.`member_id` 		  AND Members.`MemberId` = MemberProfile.`member_id`		  AND DomainFollowers.`domain` = '".$domain."' 		  AND NOT (			MemberProfile.`profile_image` IS NULL 			OR MemberProfile.`profile_image` = ' ' 			OR MemberProfile.`profile_image` = '0'		  ) LIMIT 0,".$limit);    }    function getweeklyusers($domain,$limit=null){  	if ($limit != ""){  		return $this->db_read->query("SELECT  `DomainFollowers`.*, Members.`FirstName`, Members.`LastName` FROM `DomainFollowers` INNER JOIN Members ON (Members.`MemberId` = DomainFollowers.`member_id`)WHERE `date_followed` > DATE_SUB(NOW(), INTERVAL 1 WEEK)AND domain = '$domain' LIMIT $limit");  	}else {  	 return $this->db_read->query("SELECT  `DomainFollowers`.*, Members.`FirstName`, Members.`LastName` FROM `DomainFollowers` INNER JOIN Members ON (Members.`MemberId` = DomainFollowers.`member_id`)WHERE `date_followed` > DATE_SUB(NOW(), INTERVAL 1 WEEK)AND domain = '$domain'");  	}  }    function getdomainentry($userid){  	$domain = "contrib.com";  	if ($this->checkexist('member_id',$userid)===true){  	  $query =  $this->db_read->query("SELECT domain  FROM DomainFollowers INNER JOIN Members ON (Members.`MemberId` = DomainFollowers.`member_id`)									WHERE MemberId = $userid AND DATEDIFF(SignupDate,date_followed) = 0 order by f_id LIMIT 1");  			if ($query->num_rows() > 0){			foreach ($query->result() as $row)			{			   $domain =  $row->domain;			}		}	}	return $domain;  }      function getmarketplacedomainfollowed($search = null){				return $this->db_read->query("Select domain, count(*) as followed FROM `$this->table` where domain LIKE '%$search%' GROUP BY domain ORDER BY followed desc");  } function getlatestfollowed($id,$limit=5){  	return $this->db_read->query("Select * from `$this->table` where member_id = '$id' order by f_id DESC LIMIT 0,$limit");  }    function getfollowersbydomain($domain,$limit=null,$order=null){  	$sql = "SELECT Members.`MemberId`,Members.`FirstName`, Members.`EmailAddress` FROM `DomainFollowers` LEFT JOIN Members ON (Members.`MemberId` = DomainFollowers.`member_id`)WHERE DomainFollowers.`domain` = '$domain' AND EmailAddress IS NOT NULL AND `EmailVerified` = 1";  	  	if ($order != ""){  		$sql .= " Order by $order ";  	}  	  	if ($limit != ""){  		$sql .= " LIMIT $limit ";  	}  	 	return $this->db_read->query($sql);  }    function getinfollowed($userid){  $in = "";  $query = $this->getbyattribute('member_id',$userid);		  	    $i =0;			   	$count = $query->num_rows();				   if ($query->num_rows() > 0){				   	$in = "";			        foreach ($query->result() as $row)			         {			           $in .=  "'".$row->domain."'";			           if ($i<($count-1)){			           	  $in .= ",";			           }			          $i++; 			         }			       }else {			       	  $domain = "domain.com";			       	  $in = "'".$domain."'";			       }   return $in;  }    //stats: earnings,community,theo_value,member_equity_points  function getfollowedstats($email,$stats,$in){  	 $total = 0;  	       	 switch ($stats){  	 	case 'earnings':  	 		/*$query = $this->db_aff->query("SELECT SUM(payment) AS total FROM `idevaff_sales`			LEFT JOIN `idevaff_affiliates` ON (`idevaff_affiliates`.`id` = `idevaff_sales`.`id`)			WHERE `idevaff_affiliates`.`f_name` IN ($in)");*/			$query = $this->db_aff->query("SELECT SUM(payment) AS total FROM `idevaff_sales`			LEFT JOIN `idevaff_affiliates` ON (`idevaff_affiliates`.`id` = `idevaff_sales`.`id`)			WHERE `idevaff_affiliates`.`email` = '$email'");  	 	break;  	 	case 'community':  	 		//$query = $this->db_lead->query("Select count(*) as total from leads where  domain_name IN ($in)");  	 		$query = $this->db_lead->query("Select count(*) as total from leads where email = '$email' group by domain_name");						return $query->num_rows();  	 	break;  	 	case 'theo_value':  	 		$query = $this->db_vnoc_read->query("SELECT SUM(total) AS total FROM `domain_theoretical_value` WHERE domain_name IN ($in)");  	 	break;  	 	case 'member_equity_points':  	 		$query = $this->db_vnoc_read->query("SELECT SUM(`equity_points`) AS total FROM `member_equity` LEFT JOIN domain ON (domain.`domain_id` = `member_equity`.`domain_id`) WHERE domain.`domain_name` IN ($in)");  	 	break;				  	 }  	      if ($query->num_rows() > 0){		foreach ($query->result() as $row)		{			$total =  $row->total;		}	  }	  return $total;  }  	function getfollowedbrandsbyuser($userid,$start=0,$limit=8){		$sql = "SELECT Domains.`DomainName`,Domains.`Description`,Domains.`Logo`				FROM DomainFollowers 				LEFT JOIN Domains ON (Domains.`DomainName`=DomainFollowers.`domain`)				WHERE DomainFollowers.member_id = '$userid'				AND Domains.`DomainId` IS NOT NULL				ORDER BY Domains.`DomainName` ASC				LIMIT $start,$limit";		return $this->db_read->query($sql);	}	function getfollowedbrandsbyuserv3($userid,$start = null,$limit = null,$order='Domains.`DomainName` ASC',$search=null){				$sql = "SELECT Domains.`DomainName`,Domains.`Description`,Domains.`Logo`				FROM DomainFollowers 				LEFT JOIN Domains ON (Domains.`DomainName`=DomainFollowers.`domain`)				WHERE DomainFollowers.member_id = '$userid'				AND Domains.`DomainId`";				if ($search != null){			$sql .= " AND Domains.`DomainName` LIKE '%$search%'";		}					$sql .= " ORDER BY $order ";							if($limit != null){			$sql .= " LIMIT $start,$limit";		}				return $this->db_read->query($sql);							}		function countfollowedbrandsbyuser($userid){		$total = 0;		$sql = "SELECT COUNT(DomainFollowers.domain) AS total				FROM DomainFollowers 				LEFT JOIN Domains ON (Domains.`DomainName`=DomainFollowers.`domain`)				WHERE DomainFollowers.member_id = '$userid'				AND Domains.`DomainId` IS NOT NULL";		$query = $this->db_read->query($sql);		foreach ($query->result() as $row)		{			$total =  $row->total;		}		return $total;	} }